{
  "misc": {
    "code_header": {
      "common": [
        {
          "body": "// This file is automatically generated, so please do not edit it.\n// @generated by `flutter_rust_bridge`@ 2.11.1.\n\n",
          "extern_funcs": [],
          "extern_classes": []
        }
      ],
      "io": [
        {
          "body": "// This file is automatically generated, so please do not edit it.\n// @generated by `flutter_rust_bridge`@ 2.11.1.\n\n",
          "extern_funcs": [],
          "extern_classes": []
        }
      ],
      "web": [
        {
          "body": "// This file is automatically generated, so please do not edit it.\n// @generated by `flutter_rust_bridge`@ 2.11.1.\n\n",
          "extern_funcs": [],
          "extern_classes": []
        }
      ]
    },
    "file_attributes": {
      "common": [
        {
          "body": "#![allow(\nnon_camel_case_types,\nunused,\nnon_snake_case,\nclippy::needless_return,\nclippy::redundant_closure_call,\nclippy::redundant_closure,\nclippy::useless_conversion,\nclippy::unit_arg,\nclippy::unused_unit,\nclippy::double_parens,\nclippy::let_and_return,\nclippy::too_many_arguments,\nclippy::match_single_binding,\nclippy::clone_on_copy,\nclippy::let_unit_value,\nclippy::deref_addrof,\nclippy::explicit_auto_deref,\nclippy::borrow_deref_ref,\nclippy::needless_borrow\n)]",
          "extern_funcs": [],
          "extern_classes": []
        }
      ],
      "io": [],
      "web": []
    },
    "imports": {
      "common": [
        {
          "body": "use crate::api::*;\nuse crate::*;use flutter_rust_bridge::{Handler, IntoIntoDart};\nuse flutter_rust_bridge::for_generated::{Lockable, transform_result_dco, Lifetimeable};\nuse flutter_rust_bridge::for_generated::byteorder::{NativeEndian, WriteBytesExt, ReadBytesExt};",
          "extern_funcs": [],
          "extern_classes": []
        }
      ],
      "io": [
        {
          "body": "use crate::api::*;\nuse crate::*;use flutter_rust_bridge::{Handler, IntoIntoDart};\nuse flutter_rust_bridge::for_generated::{Lockable, transform_result_dco, Lifetimeable};\nuse flutter_rust_bridge::for_generated::byteorder::{NativeEndian, WriteBytesExt, ReadBytesExt};use super::*;",
          "extern_funcs": [],
          "extern_classes": []
        }
      ],
      "web": [
        {
          "body": "use crate::api::*;\nuse crate::*;use flutter_rust_bridge::{Handler, IntoIntoDart};\nuse flutter_rust_bridge::for_generated::{Lockable, transform_result_dco, Lifetimeable};\nuse flutter_rust_bridge::for_generated::byteorder::{NativeEndian, WriteBytesExt, ReadBytesExt};use super::*;\n                use flutter_rust_bridge::for_generated::wasm_bindgen;\n                use flutter_rust_bridge::for_generated::wasm_bindgen::prelude::*;\n",
          "extern_funcs": [],
          "extern_classes": []
        }
      ]
    },
    "boilerplate": {
      "common": [
        {
          "body": "flutter_rust_bridge::frb_generated_boilerplate!(\n                    default_stream_sink_codec = SseCodec,\n                    default_rust_opaque = RustOpaqueMoi,\n                    default_rust_auto_opaque = RustAutoOpaqueMoi,\n                );\n                pub(crate) const FLUTTER_RUST_BRIDGE_CODEGEN_VERSION: &str = \"2.11.1\";\n                pub(crate) const FLUTTER_RUST_BRIDGE_CODEGEN_CONTENT_HASH: i32 = -1116567001;\n            ",
          "extern_funcs": [],
          "extern_classes": []
        }
      ],
      "io": [
        {
          "body": "flutter_rust_bridge::frb_generated_boilerplate_io!();",
          "extern_funcs": [],
          "extern_classes": []
        }
      ],
      "web": [
        {
          "body": "flutter_rust_bridge::frb_generated_boilerplate_web!();",
          "extern_funcs": [],
          "extern_classes": []
        }
      ]
    },
    "executor": {
      "common": [
        {
          "body": "flutter_rust_bridge::frb_generated_default_handler!();",
          "extern_funcs": [],
          "extern_classes": []
        }
      ],
      "io": [],
      "web": []
    },
    "wire_funcs": {
      "common": [
        {
          "body": "fn wire__crate__api__CastContext_create_device_from_info_impl(ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,rust_vec_len_: i32,data_len_: i32) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {\n                FLUTTER_RUST_BRIDGE_HANDLER.wrap_sync::<flutter_rust_bridge::for_generated::SseCodec,_>(flutter_rust_bridge::for_generated::TaskInfo{ debug_name: \"CastContext_create_device_from_info\", port: None, mode: flutter_rust_bridge::for_generated::FfiCallMode::Sync }, move || { \n            let message = unsafe { flutter_rust_bridge::for_generated::Dart2RustMessageSse::from_wire(ptr_, rust_vec_len_, data_len_) };\n            let mut deserializer = flutter_rust_bridge::for_generated::SseDeserializer::new(message);\n            let api_that = <RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<CastContext>>>::sse_decode(&mut deserializer);\nlet api_info = <crate::api::DeviceInfo>::sse_decode(&mut deserializer);deserializer.end();\n                transform_result_sse::<_, ()>((move || {\n                    let mut api_that_guard = None;\nlet decode_indices_ = flutter_rust_bridge::for_generated::lockable_compute_decode_order(vec![flutter_rust_bridge::for_generated::LockableOrderInfo::new(&api_that, 0, false)]);\n        for i in decode_indices_ {\n            match i {\n                0 => api_that_guard = Some(api_that.lockable_decode_sync_ref()),\n                _ => unreachable!(),\n            }\n        }\n        let api_that_guard = api_that_guard.unwrap();\n let output_ok = Result::<_,()>::Ok(crate::api::CastContext::create_device_from_info(&*api_that_guard, api_info))?;   Ok(output_ok)\n                })()) })\n            }",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "fn wire__crate__api__CastContext_new_impl(ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,rust_vec_len_: i32,data_len_: i32) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {\n                FLUTTER_RUST_BRIDGE_HANDLER.wrap_sync::<flutter_rust_bridge::for_generated::SseCodec,_>(flutter_rust_bridge::for_generated::TaskInfo{ debug_name: \"CastContext_new\", port: None, mode: flutter_rust_bridge::for_generated::FfiCallMode::Sync }, move || { \n            let message = unsafe { flutter_rust_bridge::for_generated::Dart2RustMessageSse::from_wire(ptr_, rust_vec_len_, data_len_) };\n            let mut deserializer = flutter_rust_bridge::for_generated::SseDeserializer::new(message);\n            deserializer.end();\n                transform_result_sse::<_, crate::api::ErrorMessage>((move || {\n                     let output_ok = crate::api::CastContext::new()?;   Ok(output_ok)\n                })()) })\n            }",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "fn wire__crate__api__device_info_from_url_impl(port_: flutter_rust_bridge::for_generated::MessagePort,ptr_: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,rust_vec_len_: i32,data_len_: i32)  {\n                FLUTTER_RUST_BRIDGE_HANDLER.wrap_normal::<flutter_rust_bridge::for_generated::SseCodec,_,_>(flutter_rust_bridge::for_generated::TaskInfo{ debug_name: \"device_info_from_url\", port: Some(port_), mode: flutter_rust_bridge::for_generated::FfiCallMode::Normal }, move || { \n            let message = unsafe { flutter_rust_bridge::for_generated::Dart2RustMessageSse::from_wire(ptr_, rust_vec_len_, data_len_) };\n            let mut deserializer = flutter_rust_bridge::for_generated::SseDeserializer::new(message);\n            let api_url = <String>::sse_decode(&mut deserializer);deserializer.end(); move |context|  {\n                    transform_result_sse::<_, ()>((move ||  {\n                         let output_ok = Result::<_,()>::Ok(crate::api::device_info_from_url(api_url))?;   Ok(output_ok)\n                    })())\n                } })\n            }",
          "extern_funcs": [],
          "extern_classes": []
        }
      ],
      "io": [
        {
          "body": "",
          "extern_funcs": [
            {
              "partial_func_name": "wire__crate__api__CastContext_create_device_from_info",
              "params": [
                {
                  "name": "ptr_",
                  "rust_type": "*mut u8",
                  "dart_type": "PlatformGeneralizedUint8ListPtr"
                },
                {
                  "name": "rust_vec_len_",
                  "rust_type": "i32",
                  "dart_type": "int"
                },
                {
                  "name": "data_len_",
                  "rust_type": "i32",
                  "dart_type": "int"
                }
              ],
              "return_type": "flutter_rust_bridge::for_generated::WireSyncRust2DartSse",
              "body": "wire__crate__api__CastContext_create_device_from_info_impl(ptr_, rust_vec_len_, data_len_)",
              "target": "Io",
              "needs_ffigen": true
            }
          ],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [
            {
              "partial_func_name": "wire__crate__api__CastContext_new",
              "params": [
                {
                  "name": "ptr_",
                  "rust_type": "*mut u8",
                  "dart_type": "PlatformGeneralizedUint8ListPtr"
                },
                {
                  "name": "rust_vec_len_",
                  "rust_type": "i32",
                  "dart_type": "int"
                },
                {
                  "name": "data_len_",
                  "rust_type": "i32",
                  "dart_type": "int"
                }
              ],
              "return_type": "flutter_rust_bridge::for_generated::WireSyncRust2DartSse",
              "body": "wire__crate__api__CastContext_new_impl(ptr_, rust_vec_len_, data_len_)",
              "target": "Io",
              "needs_ffigen": true
            }
          ],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [
            {
              "partial_func_name": "wire__crate__api__device_info_from_url",
              "params": [
                {
                  "name": "port_",
                  "rust_type": "i64",
                  "dart_type": "NativePortType"
                },
                {
                  "name": "ptr_",
                  "rust_type": "*mut u8",
                  "dart_type": "PlatformGeneralizedUint8ListPtr"
                },
                {
                  "name": "rust_vec_len_",
                  "rust_type": "i32",
                  "dart_type": "int"
                },
                {
                  "name": "data_len_",
                  "rust_type": "i32",
                  "dart_type": "int"
                }
              ],
              "return_type": null,
              "body": "wire__crate__api__device_info_from_url_impl(port_, ptr_, rust_vec_len_, data_len_)",
              "target": "Io",
              "needs_ffigen": true
            }
          ],
          "extern_classes": []
        }
      ],
      "web": [
        {
          "body": "",
          "extern_funcs": [
            {
              "partial_func_name": "wire__crate__api__CastContext_create_device_from_info",
              "params": [
                {
                  "name": "ptr_",
                  "rust_type": "flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr",
                  "dart_type": "PlatformGeneralizedUint8ListPtr"
                },
                {
                  "name": "rust_vec_len_",
                  "rust_type": "i32",
                  "dart_type": "int"
                },
                {
                  "name": "data_len_",
                  "rust_type": "i32",
                  "dart_type": "int"
                }
              ],
              "return_type": "flutter_rust_bridge::for_generated::WireSyncRust2DartSse",
              "body": "wire__crate__api__CastContext_create_device_from_info_impl(ptr_, rust_vec_len_, data_len_)",
              "target": "Web",
              "needs_ffigen": true
            }
          ],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [
            {
              "partial_func_name": "wire__crate__api__CastContext_new",
              "params": [
                {
                  "name": "ptr_",
                  "rust_type": "flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr",
                  "dart_type": "PlatformGeneralizedUint8ListPtr"
                },
                {
                  "name": "rust_vec_len_",
                  "rust_type": "i32",
                  "dart_type": "int"
                },
                {
                  "name": "data_len_",
                  "rust_type": "i32",
                  "dart_type": "int"
                }
              ],
              "return_type": "flutter_rust_bridge::for_generated::WireSyncRust2DartSse",
              "body": "wire__crate__api__CastContext_new_impl(ptr_, rust_vec_len_, data_len_)",
              "target": "Web",
              "needs_ffigen": true
            }
          ],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [
            {
              "partial_func_name": "wire__crate__api__device_info_from_url",
              "params": [
                {
                  "name": "port_",
                  "rust_type": "flutter_rust_bridge::for_generated::MessagePort",
                  "dart_type": "NativePortType"
                },
                {
                  "name": "ptr_",
                  "rust_type": "flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr",
                  "dart_type": "PlatformGeneralizedUint8ListPtr"
                },
                {
                  "name": "rust_vec_len_",
                  "rust_type": "i32",
                  "dart_type": "int"
                },
                {
                  "name": "data_len_",
                  "rust_type": "i32",
                  "dart_type": "int"
                }
              ],
              "return_type": null,
              "body": "wire__crate__api__device_info_from_url_impl(port_, ptr_, rust_vec_len_, data_len_)",
              "target": "Web",
              "needs_ffigen": true
            }
          ],
          "extern_classes": []
        }
      ]
    },
    "wrapper_structs": {
      "common": [],
      "io": [],
      "web": []
    },
    "static_checks": {
      "common": [
        {
          "body": "#[allow(clippy::unnecessary_literal_unwrap)]\nconst _: fn() = || {\n{ let DeviceInfo = None::<crate::api::DeviceInfo>.unwrap(); let _: String = DeviceInfo.name;\nlet _: crate::api::ProtocolType = DeviceInfo.protocol;\nlet _: Vec<crate::api::IpAddr> = DeviceInfo.addresses;\nlet _: u16 = DeviceInfo.port;\n } \nmatch None::<crate::api::IpAddr>.unwrap() { crate::api::IpAddr::V4 { o1,o2,o3,o4 } => { let _: u8 = o1;\nlet _: u8 = o2;\nlet _: u8 = o3;\nlet _: u8 = o4;\n },crate::api::IpAddr::V6 { o1,o2,o3,o4,o5,o6,o7,o8,o9,o10,o11,o12,o13,o14,o15,o16,scope_id } => { let _: u8 = o1;\nlet _: u8 = o2;\nlet _: u8 = o3;\nlet _: u8 = o4;\nlet _: u8 = o5;\nlet _: u8 = o6;\nlet _: u8 = o7;\nlet _: u8 = o8;\nlet _: u8 = o9;\nlet _: u8 = o10;\nlet _: u8 = o11;\nlet _: u8 = o12;\nlet _: u8 = o13;\nlet _: u8 = o14;\nlet _: u8 = o15;\nlet _: u8 = o16;\nlet _: u32 = scope_id;\n } }\n};",
          "extern_funcs": [],
          "extern_classes": []
        }
      ],
      "io": [],
      "web": []
    },
    "related_funcs": {
      "common": [
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "flutter_rust_bridge::frb_generated_moi_arc_impl_value!(flutter_rust_bridge::for_generated::RustAutoOpaqueInner<CastContext>);\n",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "flutter_rust_bridge::frb_generated_moi_arc_impl_value!(flutter_rust_bridge::for_generated::RustAutoOpaqueInner<CastingDevice>);\n",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "flutter_rust_bridge::frb_generated_moi_arc_impl_value!(flutter_rust_bridge::for_generated::RustAutoOpaqueInner<_DeviceConnectionState>);\n",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "flutter_rust_bridge::frb_generated_moi_arc_impl_value!(flutter_rust_bridge::for_generated::RustAutoOpaqueInner<_GenericKeyEvent>);\n",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "flutter_rust_bridge::frb_generated_moi_arc_impl_value!(flutter_rust_bridge::for_generated::RustAutoOpaqueInner<_GenericMediaEvent>);\n",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "flutter_rust_bridge::frb_generated_moi_arc_impl_value!(flutter_rust_bridge::for_generated::RustAutoOpaqueInner<_PlaybackState>);\n",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "flutter_rust_bridge::frb_generated_moi_arc_impl_value!(flutter_rust_bridge::for_generated::RustAutoOpaqueInner<_Source>);\n",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        }
      ],
      "io": [
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [
            {
              "partial_func_name": "rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerCastContext",
              "params": [
                {
                  "name": "ptr",
                  "rust_type": "*const std::ffi::c_void",
                  "dart_type": "int"
                }
              ],
              "return_type": null,
              "body": "MoiArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<CastContext>>::increment_strong_count(ptr as _);",
              "target": "Io",
              "needs_ffigen": false
            },
            {
              "partial_func_name": "rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerCastContext",
              "params": [
                {
                  "name": "ptr",
                  "rust_type": "*const std::ffi::c_void",
                  "dart_type": "int"
                }
              ],
              "return_type": null,
              "body": "MoiArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<CastContext>>::decrement_strong_count(ptr as _);",
              "target": "Io",
              "needs_ffigen": false
            }
          ],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [
            {
              "partial_func_name": "rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerCastingDevice",
              "params": [
                {
                  "name": "ptr",
                  "rust_type": "*const std::ffi::c_void",
                  "dart_type": "int"
                }
              ],
              "return_type": null,
              "body": "MoiArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<CastingDevice>>::increment_strong_count(ptr as _);",
              "target": "Io",
              "needs_ffigen": false
            },
            {
              "partial_func_name": "rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerCastingDevice",
              "params": [
                {
                  "name": "ptr",
                  "rust_type": "*const std::ffi::c_void",
                  "dart_type": "int"
                }
              ],
              "return_type": null,
              "body": "MoiArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<CastingDevice>>::decrement_strong_count(ptr as _);",
              "target": "Io",
              "needs_ffigen": false
            }
          ],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [
            {
              "partial_func_name": "rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInner_DeviceConnectionState",
              "params": [
                {
                  "name": "ptr",
                  "rust_type": "*const std::ffi::c_void",
                  "dart_type": "int"
                }
              ],
              "return_type": null,
              "body": "MoiArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<_DeviceConnectionState>>::increment_strong_count(ptr as _);",
              "target": "Io",
              "needs_ffigen": false
            },
            {
              "partial_func_name": "rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInner_DeviceConnectionState",
              "params": [
                {
                  "name": "ptr",
                  "rust_type": "*const std::ffi::c_void",
                  "dart_type": "int"
                }
              ],
              "return_type": null,
              "body": "MoiArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<_DeviceConnectionState>>::decrement_strong_count(ptr as _);",
              "target": "Io",
              "needs_ffigen": false
            }
          ],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [
            {
              "partial_func_name": "rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInner_GenericKeyEvent",
              "params": [
                {
                  "name": "ptr",
                  "rust_type": "*const std::ffi::c_void",
                  "dart_type": "int"
                }
              ],
              "return_type": null,
              "body": "MoiArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<_GenericKeyEvent>>::increment_strong_count(ptr as _);",
              "target": "Io",
              "needs_ffigen": false
            },
            {
              "partial_func_name": "rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInner_GenericKeyEvent",
              "params": [
                {
                  "name": "ptr",
                  "rust_type": "*const std::ffi::c_void",
                  "dart_type": "int"
                }
              ],
              "return_type": null,
              "body": "MoiArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<_GenericKeyEvent>>::decrement_strong_count(ptr as _);",
              "target": "Io",
              "needs_ffigen": false
            }
          ],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [
            {
              "partial_func_name": "rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInner_GenericMediaEvent",
              "params": [
                {
                  "name": "ptr",
                  "rust_type": "*const std::ffi::c_void",
                  "dart_type": "int"
                }
              ],
              "return_type": null,
              "body": "MoiArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<_GenericMediaEvent>>::increment_strong_count(ptr as _);",
              "target": "Io",
              "needs_ffigen": false
            },
            {
              "partial_func_name": "rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInner_GenericMediaEvent",
              "params": [
                {
                  "name": "ptr",
                  "rust_type": "*const std::ffi::c_void",
                  "dart_type": "int"
                }
              ],
              "return_type": null,
              "body": "MoiArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<_GenericMediaEvent>>::decrement_strong_count(ptr as _);",
              "target": "Io",
              "needs_ffigen": false
            }
          ],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [
            {
              "partial_func_name": "rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInner_PlaybackState",
              "params": [
                {
                  "name": "ptr",
                  "rust_type": "*const std::ffi::c_void",
                  "dart_type": "int"
                }
              ],
              "return_type": null,
              "body": "MoiArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<_PlaybackState>>::increment_strong_count(ptr as _);",
              "target": "Io",
              "needs_ffigen": false
            },
            {
              "partial_func_name": "rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInner_PlaybackState",
              "params": [
                {
                  "name": "ptr",
                  "rust_type": "*const std::ffi::c_void",
                  "dart_type": "int"
                }
              ],
              "return_type": null,
              "body": "MoiArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<_PlaybackState>>::decrement_strong_count(ptr as _);",
              "target": "Io",
              "needs_ffigen": false
            }
          ],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [
            {
              "partial_func_name": "rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInner_Source",
              "params": [
                {
                  "name": "ptr",
                  "rust_type": "*const std::ffi::c_void",
                  "dart_type": "int"
                }
              ],
              "return_type": null,
              "body": "MoiArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<_Source>>::increment_strong_count(ptr as _);",
              "target": "Io",
              "needs_ffigen": false
            },
            {
              "partial_func_name": "rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInner_Source",
              "params": [
                {
                  "name": "ptr",
                  "rust_type": "*const std::ffi::c_void",
                  "dart_type": "int"
                }
              ],
              "return_type": null,
              "body": "MoiArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<_Source>>::decrement_strong_count(ptr as _);",
              "target": "Io",
              "needs_ffigen": false
            }
          ],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        }
      ],
      "web": [
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [
            {
              "partial_func_name": "rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerCastContext",
              "params": [
                {
                  "name": "ptr",
                  "rust_type": "*const std::ffi::c_void",
                  "dart_type": "int"
                }
              ],
              "return_type": null,
              "body": "MoiArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<CastContext>>::increment_strong_count(ptr as _);",
              "target": "Web",
              "needs_ffigen": false
            },
            {
              "partial_func_name": "rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerCastContext",
              "params": [
                {
                  "name": "ptr",
                  "rust_type": "*const std::ffi::c_void",
                  "dart_type": "int"
                }
              ],
              "return_type": null,
              "body": "MoiArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<CastContext>>::decrement_strong_count(ptr as _);",
              "target": "Web",
              "needs_ffigen": false
            }
          ],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [
            {
              "partial_func_name": "rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerCastingDevice",
              "params": [
                {
                  "name": "ptr",
                  "rust_type": "*const std::ffi::c_void",
                  "dart_type": "int"
                }
              ],
              "return_type": null,
              "body": "MoiArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<CastingDevice>>::increment_strong_count(ptr as _);",
              "target": "Web",
              "needs_ffigen": false
            },
            {
              "partial_func_name": "rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerCastingDevice",
              "params": [
                {
                  "name": "ptr",
                  "rust_type": "*const std::ffi::c_void",
                  "dart_type": "int"
                }
              ],
              "return_type": null,
              "body": "MoiArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<CastingDevice>>::decrement_strong_count(ptr as _);",
              "target": "Web",
              "needs_ffigen": false
            }
          ],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [
            {
              "partial_func_name": "rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInner_DeviceConnectionState",
              "params": [
                {
                  "name": "ptr",
                  "rust_type": "*const std::ffi::c_void",
                  "dart_type": "int"
                }
              ],
              "return_type": null,
              "body": "MoiArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<_DeviceConnectionState>>::increment_strong_count(ptr as _);",
              "target": "Web",
              "needs_ffigen": false
            },
            {
              "partial_func_name": "rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInner_DeviceConnectionState",
              "params": [
                {
                  "name": "ptr",
                  "rust_type": "*const std::ffi::c_void",
                  "dart_type": "int"
                }
              ],
              "return_type": null,
              "body": "MoiArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<_DeviceConnectionState>>::decrement_strong_count(ptr as _);",
              "target": "Web",
              "needs_ffigen": false
            }
          ],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [
            {
              "partial_func_name": "rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInner_GenericKeyEvent",
              "params": [
                {
                  "name": "ptr",
                  "rust_type": "*const std::ffi::c_void",
                  "dart_type": "int"
                }
              ],
              "return_type": null,
              "body": "MoiArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<_GenericKeyEvent>>::increment_strong_count(ptr as _);",
              "target": "Web",
              "needs_ffigen": false
            },
            {
              "partial_func_name": "rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInner_GenericKeyEvent",
              "params": [
                {
                  "name": "ptr",
                  "rust_type": "*const std::ffi::c_void",
                  "dart_type": "int"
                }
              ],
              "return_type": null,
              "body": "MoiArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<_GenericKeyEvent>>::decrement_strong_count(ptr as _);",
              "target": "Web",
              "needs_ffigen": false
            }
          ],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [
            {
              "partial_func_name": "rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInner_GenericMediaEvent",
              "params": [
                {
                  "name": "ptr",
                  "rust_type": "*const std::ffi::c_void",
                  "dart_type": "int"
                }
              ],
              "return_type": null,
              "body": "MoiArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<_GenericMediaEvent>>::increment_strong_count(ptr as _);",
              "target": "Web",
              "needs_ffigen": false
            },
            {
              "partial_func_name": "rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInner_GenericMediaEvent",
              "params": [
                {
                  "name": "ptr",
                  "rust_type": "*const std::ffi::c_void",
                  "dart_type": "int"
                }
              ],
              "return_type": null,
              "body": "MoiArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<_GenericMediaEvent>>::decrement_strong_count(ptr as _);",
              "target": "Web",
              "needs_ffigen": false
            }
          ],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [
            {
              "partial_func_name": "rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInner_PlaybackState",
              "params": [
                {
                  "name": "ptr",
                  "rust_type": "*const std::ffi::c_void",
                  "dart_type": "int"
                }
              ],
              "return_type": null,
              "body": "MoiArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<_PlaybackState>>::increment_strong_count(ptr as _);",
              "target": "Web",
              "needs_ffigen": false
            },
            {
              "partial_func_name": "rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInner_PlaybackState",
              "params": [
                {
                  "name": "ptr",
                  "rust_type": "*const std::ffi::c_void",
                  "dart_type": "int"
                }
              ],
              "return_type": null,
              "body": "MoiArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<_PlaybackState>>::decrement_strong_count(ptr as _);",
              "target": "Web",
              "needs_ffigen": false
            }
          ],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [
            {
              "partial_func_name": "rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInner_Source",
              "params": [
                {
                  "name": "ptr",
                  "rust_type": "*const std::ffi::c_void",
                  "dart_type": "int"
                }
              ],
              "return_type": null,
              "body": "MoiArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<_Source>>::increment_strong_count(ptr as _);",
              "target": "Web",
              "needs_ffigen": false
            },
            {
              "partial_func_name": "rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInner_Source",
              "params": [
                {
                  "name": "ptr",
                  "rust_type": "*const std::ffi::c_void",
                  "dart_type": "int"
                }
              ],
              "return_type": null,
              "body": "MoiArc::<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<_Source>>::decrement_strong_count(ptr as _);",
              "target": "Web",
              "needs_ffigen": false
            }
          ],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        }
      ]
    },
    "extra_from_parser": {
      "common": [
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        }
      ],
      "io": [],
      "web": []
    },
    "content_hash": -1116567001
  },
  "dart2rust": {
    "inner": {
      "common": [
        {
          "body": "\n                impl SseDecode for CastContext {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_decode(deserializer: &mut flutter_rust_bridge::for_generated::SseDeserializer) -> Self {let mut inner = <RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<CastContext>>>::sse_decode(deserializer);\n        return flutter_rust_bridge::for_generated::rust_auto_opaque_decode_owned(inner);}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseDecode for CastingDevice {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_decode(deserializer: &mut flutter_rust_bridge::for_generated::SseDeserializer) -> Self {let mut inner = <RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<CastingDevice>>>::sse_decode(deserializer);\n        return flutter_rust_bridge::for_generated::rust_auto_opaque_decode_owned(inner);}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseDecode for _DeviceConnectionState {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_decode(deserializer: &mut flutter_rust_bridge::for_generated::SseDeserializer) -> Self {let mut inner = <RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<_DeviceConnectionState>>>::sse_decode(deserializer);\n        return flutter_rust_bridge::for_generated::rust_auto_opaque_decode_owned(inner);}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseDecode for _GenericKeyEvent {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_decode(deserializer: &mut flutter_rust_bridge::for_generated::SseDeserializer) -> Self {let mut inner = <RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<_GenericKeyEvent>>>::sse_decode(deserializer);\n        return flutter_rust_bridge::for_generated::rust_auto_opaque_decode_owned(inner);}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseDecode for _GenericMediaEvent {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_decode(deserializer: &mut flutter_rust_bridge::for_generated::SseDeserializer) -> Self {let mut inner = <RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<_GenericMediaEvent>>>::sse_decode(deserializer);\n        return flutter_rust_bridge::for_generated::rust_auto_opaque_decode_owned(inner);}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseDecode for _PlaybackState {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_decode(deserializer: &mut flutter_rust_bridge::for_generated::SseDeserializer) -> Self {let mut inner = <RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<_PlaybackState>>>::sse_decode(deserializer);\n        return flutter_rust_bridge::for_generated::rust_auto_opaque_decode_owned(inner);}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseDecode for _Source {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_decode(deserializer: &mut flutter_rust_bridge::for_generated::SseDeserializer) -> Self {let mut inner = <RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<_Source>>>::sse_decode(deserializer);\n        return flutter_rust_bridge::for_generated::rust_auto_opaque_decode_owned(inner);}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseDecode for RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<CastContext>> {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_decode(deserializer: &mut flutter_rust_bridge::for_generated::SseDeserializer) -> Self {let mut inner = <usize>::sse_decode(deserializer);\n        return decode_rust_opaque_moi(inner);}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseDecode for RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<CastingDevice>> {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_decode(deserializer: &mut flutter_rust_bridge::for_generated::SseDeserializer) -> Self {let mut inner = <usize>::sse_decode(deserializer);\n        return decode_rust_opaque_moi(inner);}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseDecode for RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<_DeviceConnectionState>> {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_decode(deserializer: &mut flutter_rust_bridge::for_generated::SseDeserializer) -> Self {let mut inner = <usize>::sse_decode(deserializer);\n        return decode_rust_opaque_moi(inner);}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseDecode for RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<_GenericKeyEvent>> {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_decode(deserializer: &mut flutter_rust_bridge::for_generated::SseDeserializer) -> Self {let mut inner = <usize>::sse_decode(deserializer);\n        return decode_rust_opaque_moi(inner);}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseDecode for RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<_GenericMediaEvent>> {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_decode(deserializer: &mut flutter_rust_bridge::for_generated::SseDeserializer) -> Self {let mut inner = <usize>::sse_decode(deserializer);\n        return decode_rust_opaque_moi(inner);}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseDecode for RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<_PlaybackState>> {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_decode(deserializer: &mut flutter_rust_bridge::for_generated::SseDeserializer) -> Self {let mut inner = <usize>::sse_decode(deserializer);\n        return decode_rust_opaque_moi(inner);}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseDecode for RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<_Source>> {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_decode(deserializer: &mut flutter_rust_bridge::for_generated::SseDeserializer) -> Self {let mut inner = <usize>::sse_decode(deserializer);\n        return decode_rust_opaque_moi(inner);}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseDecode for String {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_decode(deserializer: &mut flutter_rust_bridge::for_generated::SseDeserializer) -> Self {let mut inner = <Vec<u8>>::sse_decode(deserializer);\n        return String::from_utf8(inner).unwrap();}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseDecode for crate::api::DeviceInfo {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_decode(deserializer: &mut flutter_rust_bridge::for_generated::SseDeserializer) -> Self {let mut var_name = <String>::sse_decode(deserializer);\nlet mut var_protocol = <crate::api::ProtocolType>::sse_decode(deserializer);\nlet mut var_addresses = <Vec<crate::api::IpAddr>>::sse_decode(deserializer);\nlet mut var_port = <u16>::sse_decode(deserializer);\nreturn crate::api::DeviceInfo{name: var_name, protocol: var_protocol, addresses: var_addresses, port: var_port};}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseDecode for crate::api::ErrorMessage {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_decode(deserializer: &mut flutter_rust_bridge::for_generated::SseDeserializer) -> Self {let mut tag_ = <i32>::sse_decode(deserializer);\n            match tag_ {0 => { let mut var_field0 = <String>::sse_decode(deserializer);\nreturn crate::api::ErrorMessage::Error(var_field0); }\n _ => { unimplemented!(\"\"); }}}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseDecode for f64 {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_decode(deserializer: &mut flutter_rust_bridge::for_generated::SseDeserializer) -> Self {deserializer.cursor.read_f64::<NativeEndian>().unwrap()}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseDecode for i32 {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_decode(deserializer: &mut flutter_rust_bridge::for_generated::SseDeserializer) -> Self {deserializer.cursor.read_i32::<NativeEndian>().unwrap()}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseDecode for crate::api::IpAddr {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_decode(deserializer: &mut flutter_rust_bridge::for_generated::SseDeserializer) -> Self {let mut tag_ = <i32>::sse_decode(deserializer);\n            match tag_ {0 => { let mut var_o1 = <u8>::sse_decode(deserializer);\nlet mut var_o2 = <u8>::sse_decode(deserializer);\nlet mut var_o3 = <u8>::sse_decode(deserializer);\nlet mut var_o4 = <u8>::sse_decode(deserializer);\nreturn crate::api::IpAddr::V4{o1: var_o1, o2: var_o2, o3: var_o3, o4: var_o4}; }\n1 => { let mut var_o1 = <u8>::sse_decode(deserializer);\nlet mut var_o2 = <u8>::sse_decode(deserializer);\nlet mut var_o3 = <u8>::sse_decode(deserializer);\nlet mut var_o4 = <u8>::sse_decode(deserializer);\nlet mut var_o5 = <u8>::sse_decode(deserializer);\nlet mut var_o6 = <u8>::sse_decode(deserializer);\nlet mut var_o7 = <u8>::sse_decode(deserializer);\nlet mut var_o8 = <u8>::sse_decode(deserializer);\nlet mut var_o9 = <u8>::sse_decode(deserializer);\nlet mut var_o10 = <u8>::sse_decode(deserializer);\nlet mut var_o11 = <u8>::sse_decode(deserializer);\nlet mut var_o12 = <u8>::sse_decode(deserializer);\nlet mut var_o13 = <u8>::sse_decode(deserializer);\nlet mut var_o14 = <u8>::sse_decode(deserializer);\nlet mut var_o15 = <u8>::sse_decode(deserializer);\nlet mut var_o16 = <u8>::sse_decode(deserializer);\nlet mut var_scopeId = <u32>::sse_decode(deserializer);\nreturn crate::api::IpAddr::V6{o1: var_o1, o2: var_o2, o3: var_o3, o4: var_o4, o5: var_o5, o6: var_o6, o7: var_o7, o8: var_o8, o9: var_o9, o10: var_o10, o11: var_o11, o12: var_o12, o13: var_o13, o14: var_o14, o15: var_o15, o16: var_o16, scope_id: var_scopeId}; }\n _ => { unimplemented!(\"\"); }}}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseDecode for Vec<crate::api::IpAddr> {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_decode(deserializer: &mut flutter_rust_bridge::for_generated::SseDeserializer) -> Self {let mut len_ = <i32>::sse_decode(deserializer);\n        let mut ans_ = vec![];\n        for idx_ in 0..len_ { ans_.push(<crate::api::IpAddr>::sse_decode(deserializer)); }\n        return ans_;}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseDecode for Vec<u8> {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_decode(deserializer: &mut flutter_rust_bridge::for_generated::SseDeserializer) -> Self {let mut len_ = <i32>::sse_decode(deserializer);\n        let mut ans_ = vec![];\n        for idx_ in 0..len_ { ans_.push(<u8>::sse_decode(deserializer)); }\n        return ans_;}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseDecode for Option<crate::api::DeviceInfo> {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_decode(deserializer: &mut flutter_rust_bridge::for_generated::SseDeserializer) -> Self {if (<bool>::sse_decode(deserializer)) {\n                return Some(<crate::api::DeviceInfo>::sse_decode(deserializer));\n            } else {\n                return None;\n            }}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseDecode for crate::api::ProtocolType {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_decode(deserializer: &mut flutter_rust_bridge::for_generated::SseDeserializer) -> Self {let mut inner = <i32>::sse_decode(deserializer);\n        return match inner {\n            0 => crate::api::ProtocolType::Chromecast,\n1 => crate::api::ProtocolType::FCast,\n            _ => unreachable!(\"Invalid variant for ProtocolType: {}\", inner),\n        };}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseDecode for u16 {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_decode(deserializer: &mut flutter_rust_bridge::for_generated::SseDeserializer) -> Self {deserializer.cursor.read_u16::<NativeEndian>().unwrap()}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseDecode for u32 {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_decode(deserializer: &mut flutter_rust_bridge::for_generated::SseDeserializer) -> Self {deserializer.cursor.read_u32::<NativeEndian>().unwrap()}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseDecode for u8 {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_decode(deserializer: &mut flutter_rust_bridge::for_generated::SseDeserializer) -> Self {deserializer.cursor.read_u8().unwrap()}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseDecode for () {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_decode(deserializer: &mut flutter_rust_bridge::for_generated::SseDeserializer) -> Self {}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseDecode for usize {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_decode(deserializer: &mut flutter_rust_bridge::for_generated::SseDeserializer) -> Self {deserializer.cursor.read_u64::<NativeEndian>().unwrap() as _}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseDecode for bool {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_decode(deserializer: &mut flutter_rust_bridge::for_generated::SseDeserializer) -> Self {deserializer.cursor.read_u8().unwrap() != 0}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                fn pde_ffi_dispatcher_primary_impl(\n                    func_id: i32,port: flutter_rust_bridge::for_generated::MessagePort,\n                    ptr: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,\n                    rust_vec_len: i32,\n                    data_len: i32,\n                )  {\n                    // Codec=Pde (Serialization + dispatch), see doc to use other codecs\n                    match func_id {\n                        13 => wire__crate__api__device_info_from_url_impl(port, ptr, rust_vec_len, data_len),\n                        _ => unreachable!(),\n                    }\n                }\n                \n                fn pde_ffi_dispatcher_sync_impl(\n                    func_id: i32,\n                    ptr: flutter_rust_bridge::for_generated::PlatformGeneralizedUint8ListPtr,\n                    rust_vec_len: i32,\n                    data_len: i32,\n                ) -> flutter_rust_bridge::for_generated::WireSyncRust2DartSse {\n                    // Codec=Pde (Serialization + dispatch), see doc to use other codecs\n                    match func_id {\n                        1 => wire__crate__api__CastContext_create_device_from_info_impl(ptr, rust_vec_len, data_len),\n2 => wire__crate__api__CastContext_new_impl(ptr, rust_vec_len, data_len),\n                        _ => unreachable!(),\n                    }\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        }
      ],
      "io": [
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        }
      ],
      "web": [
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        }
      ]
    }
  },
  "rust2dart": {
    "inner": {
      "common": [
        {
          "body": "\n                // Codec=Dco (DartCObject based), see doc to use other codecs\n            impl flutter_rust_bridge::IntoDart for FrbWrapper<CastContext> {\n                fn into_dart(self) -> flutter_rust_bridge::for_generated::DartAbi {\n                    flutter_rust_bridge::for_generated::rust_auto_opaque_encode::<_, MoiArc<_>>(self.0).into_dart()\n                }\n            }\n            impl flutter_rust_bridge::for_generated::IntoDartExceptPrimitive for FrbWrapper<CastContext> {}\n\n                impl flutter_rust_bridge::IntoIntoDart<FrbWrapper<CastContext>> for CastContext {\n            fn into_into_dart(self) -> FrbWrapper<CastContext> {\n                self.into()\n            }\n        }\n\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                // Codec=Dco (DartCObject based), see doc to use other codecs\n            impl flutter_rust_bridge::IntoDart for FrbWrapper<CastingDevice> {\n                fn into_dart(self) -> flutter_rust_bridge::for_generated::DartAbi {\n                    flutter_rust_bridge::for_generated::rust_auto_opaque_encode::<_, MoiArc<_>>(self.0).into_dart()\n                }\n            }\n            impl flutter_rust_bridge::for_generated::IntoDartExceptPrimitive for FrbWrapper<CastingDevice> {}\n\n                impl flutter_rust_bridge::IntoIntoDart<FrbWrapper<CastingDevice>> for CastingDevice {\n            fn into_into_dart(self) -> FrbWrapper<CastingDevice> {\n                self.into()\n            }\n        }\n\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                // Codec=Dco (DartCObject based), see doc to use other codecs\n            impl flutter_rust_bridge::IntoDart for FrbWrapper<_DeviceConnectionState> {\n                fn into_dart(self) -> flutter_rust_bridge::for_generated::DartAbi {\n                    flutter_rust_bridge::for_generated::rust_auto_opaque_encode::<_, MoiArc<_>>(self.0).into_dart()\n                }\n            }\n            impl flutter_rust_bridge::for_generated::IntoDartExceptPrimitive for FrbWrapper<_DeviceConnectionState> {}\n\n                impl flutter_rust_bridge::IntoIntoDart<FrbWrapper<_DeviceConnectionState>> for _DeviceConnectionState {\n            fn into_into_dart(self) -> FrbWrapper<_DeviceConnectionState> {\n                self.into()\n            }\n        }\n\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                // Codec=Dco (DartCObject based), see doc to use other codecs\n            impl flutter_rust_bridge::IntoDart for FrbWrapper<_GenericKeyEvent> {\n                fn into_dart(self) -> flutter_rust_bridge::for_generated::DartAbi {\n                    flutter_rust_bridge::for_generated::rust_auto_opaque_encode::<_, MoiArc<_>>(self.0).into_dart()\n                }\n            }\n            impl flutter_rust_bridge::for_generated::IntoDartExceptPrimitive for FrbWrapper<_GenericKeyEvent> {}\n\n                impl flutter_rust_bridge::IntoIntoDart<FrbWrapper<_GenericKeyEvent>> for _GenericKeyEvent {\n            fn into_into_dart(self) -> FrbWrapper<_GenericKeyEvent> {\n                self.into()\n            }\n        }\n\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                // Codec=Dco (DartCObject based), see doc to use other codecs\n            impl flutter_rust_bridge::IntoDart for FrbWrapper<_GenericMediaEvent> {\n                fn into_dart(self) -> flutter_rust_bridge::for_generated::DartAbi {\n                    flutter_rust_bridge::for_generated::rust_auto_opaque_encode::<_, MoiArc<_>>(self.0).into_dart()\n                }\n            }\n            impl flutter_rust_bridge::for_generated::IntoDartExceptPrimitive for FrbWrapper<_GenericMediaEvent> {}\n\n                impl flutter_rust_bridge::IntoIntoDart<FrbWrapper<_GenericMediaEvent>> for _GenericMediaEvent {\n            fn into_into_dart(self) -> FrbWrapper<_GenericMediaEvent> {\n                self.into()\n            }\n        }\n\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                // Codec=Dco (DartCObject based), see doc to use other codecs\n            impl flutter_rust_bridge::IntoDart for FrbWrapper<_PlaybackState> {\n                fn into_dart(self) -> flutter_rust_bridge::for_generated::DartAbi {\n                    flutter_rust_bridge::for_generated::rust_auto_opaque_encode::<_, MoiArc<_>>(self.0).into_dart()\n                }\n            }\n            impl flutter_rust_bridge::for_generated::IntoDartExceptPrimitive for FrbWrapper<_PlaybackState> {}\n\n                impl flutter_rust_bridge::IntoIntoDart<FrbWrapper<_PlaybackState>> for _PlaybackState {\n            fn into_into_dart(self) -> FrbWrapper<_PlaybackState> {\n                self.into()\n            }\n        }\n\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                // Codec=Dco (DartCObject based), see doc to use other codecs\n            impl flutter_rust_bridge::IntoDart for FrbWrapper<_Source> {\n                fn into_dart(self) -> flutter_rust_bridge::for_generated::DartAbi {\n                    flutter_rust_bridge::for_generated::rust_auto_opaque_encode::<_, MoiArc<_>>(self.0).into_dart()\n                }\n            }\n            impl flutter_rust_bridge::for_generated::IntoDartExceptPrimitive for FrbWrapper<_Source> {}\n\n                impl flutter_rust_bridge::IntoIntoDart<FrbWrapper<_Source>> for _Source {\n            fn into_into_dart(self) -> FrbWrapper<_Source> {\n                self.into()\n            }\n        }\n\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "// Codec=Dco (DartCObject based), see doc to use other codecs\n            impl flutter_rust_bridge::IntoDart for FrbWrapper<crate::api::DeviceInfo> {\n                fn into_dart(self) -> flutter_rust_bridge::for_generated::DartAbi {\n                    [\n                    self.0.name.into_into_dart().into_dart(),\nself.0.protocol.into_into_dart().into_dart(),\nself.0.addresses.into_into_dart().into_dart(),\nself.0.port.into_into_dart().into_dart()\n                ].into_dart()\n                }\n            }\n            impl flutter_rust_bridge::for_generated::IntoDartExceptPrimitive for FrbWrapper<crate::api::DeviceInfo> {}\nimpl flutter_rust_bridge::IntoIntoDart<FrbWrapper<crate::api::DeviceInfo>> for crate::api::DeviceInfo {\n            fn into_into_dart(self) -> FrbWrapper<crate::api::DeviceInfo> {\n                self.into()\n            }\n        }\n",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "// Codec=Dco (DartCObject based), see doc to use other codecs\n            impl flutter_rust_bridge::IntoDart for crate::api::ErrorMessage {\n                fn into_dart(self) -> flutter_rust_bridge::for_generated::DartAbi {\n                    match self {crate::api::ErrorMessage::Error(field0) => { [0.into_dart(),\nfield0.into_into_dart().into_dart()].into_dart() }\n _ => { unimplemented!(\"\"); }}\n                }\n            }\n            impl flutter_rust_bridge::for_generated::IntoDartExceptPrimitive for crate::api::ErrorMessage {}\nimpl flutter_rust_bridge::IntoIntoDart<crate::api::ErrorMessage> for crate::api::ErrorMessage {\n            fn into_into_dart(self) -> crate::api::ErrorMessage {\n                self\n            }\n        }\n",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "// Codec=Dco (DartCObject based), see doc to use other codecs\n            impl flutter_rust_bridge::IntoDart for FrbWrapper<crate::api::IpAddr> {\n                fn into_dart(self) -> flutter_rust_bridge::for_generated::DartAbi {\n                    match self.0 {crate::api::IpAddr::V4{o1,o2,o3,o4} => { [0.into_dart(),\no1.into_into_dart().into_dart(),\no2.into_into_dart().into_dart(),\no3.into_into_dart().into_dart(),\no4.into_into_dart().into_dart()].into_dart() }\ncrate::api::IpAddr::V6{o1,o2,o3,o4,o5,o6,o7,o8,o9,o10,o11,o12,o13,o14,o15,o16,scope_id} => { [1.into_dart(),\no1.into_into_dart().into_dart(),\no2.into_into_dart().into_dart(),\no3.into_into_dart().into_dart(),\no4.into_into_dart().into_dart(),\no5.into_into_dart().into_dart(),\no6.into_into_dart().into_dart(),\no7.into_into_dart().into_dart(),\no8.into_into_dart().into_dart(),\no9.into_into_dart().into_dart(),\no10.into_into_dart().into_dart(),\no11.into_into_dart().into_dart(),\no12.into_into_dart().into_dart(),\no13.into_into_dart().into_dart(),\no14.into_into_dart().into_dart(),\no15.into_into_dart().into_dart(),\no16.into_into_dart().into_dart(),\nscope_id.into_into_dart().into_dart()].into_dart() }\n _ => { unimplemented!(\"\"); }}\n                }\n            }\n            impl flutter_rust_bridge::for_generated::IntoDartExceptPrimitive for FrbWrapper<crate::api::IpAddr> {}\nimpl flutter_rust_bridge::IntoIntoDart<FrbWrapper<crate::api::IpAddr>> for crate::api::IpAddr {\n            fn into_into_dart(self) -> FrbWrapper<crate::api::IpAddr> {\n                self.into()\n            }\n        }\n",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "// Codec=Dco (DartCObject based), see doc to use other codecs\n            impl flutter_rust_bridge::IntoDart for FrbWrapper<crate::api::ProtocolType> {\n                fn into_dart(self) -> flutter_rust_bridge::for_generated::DartAbi {\n                    match self.0 {\n                    crate::api::ProtocolType::Chromecast => 0.into_dart(),\ncrate::api::ProtocolType::FCast => 1.into_dart(),\n                    _ => unreachable!(),\n                }\n                }\n            }\n            impl flutter_rust_bridge::for_generated::IntoDartExceptPrimitive for FrbWrapper<crate::api::ProtocolType> {}\nimpl flutter_rust_bridge::IntoIntoDart<FrbWrapper<crate::api::ProtocolType>> for crate::api::ProtocolType {\n            fn into_into_dart(self) -> FrbWrapper<crate::api::ProtocolType> {\n                self.into()\n            }\n        }\n",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseEncode for CastContext {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_encode(self, serializer: &mut flutter_rust_bridge::for_generated::SseSerializer) {<RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<CastContext>>>::sse_encode(flutter_rust_bridge::for_generated::rust_auto_opaque_encode::<_, MoiArc<_>>(self), serializer);}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseEncode for CastingDevice {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_encode(self, serializer: &mut flutter_rust_bridge::for_generated::SseSerializer) {<RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<CastingDevice>>>::sse_encode(flutter_rust_bridge::for_generated::rust_auto_opaque_encode::<_, MoiArc<_>>(self), serializer);}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseEncode for _DeviceConnectionState {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_encode(self, serializer: &mut flutter_rust_bridge::for_generated::SseSerializer) {<RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<_DeviceConnectionState>>>::sse_encode(flutter_rust_bridge::for_generated::rust_auto_opaque_encode::<_, MoiArc<_>>(self), serializer);}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseEncode for _GenericKeyEvent {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_encode(self, serializer: &mut flutter_rust_bridge::for_generated::SseSerializer) {<RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<_GenericKeyEvent>>>::sse_encode(flutter_rust_bridge::for_generated::rust_auto_opaque_encode::<_, MoiArc<_>>(self), serializer);}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseEncode for _GenericMediaEvent {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_encode(self, serializer: &mut flutter_rust_bridge::for_generated::SseSerializer) {<RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<_GenericMediaEvent>>>::sse_encode(flutter_rust_bridge::for_generated::rust_auto_opaque_encode::<_, MoiArc<_>>(self), serializer);}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseEncode for _PlaybackState {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_encode(self, serializer: &mut flutter_rust_bridge::for_generated::SseSerializer) {<RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<_PlaybackState>>>::sse_encode(flutter_rust_bridge::for_generated::rust_auto_opaque_encode::<_, MoiArc<_>>(self), serializer);}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseEncode for _Source {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_encode(self, serializer: &mut flutter_rust_bridge::for_generated::SseSerializer) {<RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<_Source>>>::sse_encode(flutter_rust_bridge::for_generated::rust_auto_opaque_encode::<_, MoiArc<_>>(self), serializer);}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseEncode for RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<CastContext>> {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_encode(self, serializer: &mut flutter_rust_bridge::for_generated::SseSerializer) {let (ptr, size) = self.sse_encode_raw();\n                <usize>::sse_encode(ptr, serializer);\n                <i32>::sse_encode(size, serializer);}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseEncode for RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<CastingDevice>> {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_encode(self, serializer: &mut flutter_rust_bridge::for_generated::SseSerializer) {let (ptr, size) = self.sse_encode_raw();\n                <usize>::sse_encode(ptr, serializer);\n                <i32>::sse_encode(size, serializer);}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseEncode for RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<_DeviceConnectionState>> {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_encode(self, serializer: &mut flutter_rust_bridge::for_generated::SseSerializer) {let (ptr, size) = self.sse_encode_raw();\n                <usize>::sse_encode(ptr, serializer);\n                <i32>::sse_encode(size, serializer);}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseEncode for RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<_GenericKeyEvent>> {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_encode(self, serializer: &mut flutter_rust_bridge::for_generated::SseSerializer) {let (ptr, size) = self.sse_encode_raw();\n                <usize>::sse_encode(ptr, serializer);\n                <i32>::sse_encode(size, serializer);}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseEncode for RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<_GenericMediaEvent>> {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_encode(self, serializer: &mut flutter_rust_bridge::for_generated::SseSerializer) {let (ptr, size) = self.sse_encode_raw();\n                <usize>::sse_encode(ptr, serializer);\n                <i32>::sse_encode(size, serializer);}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseEncode for RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<_PlaybackState>> {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_encode(self, serializer: &mut flutter_rust_bridge::for_generated::SseSerializer) {let (ptr, size) = self.sse_encode_raw();\n                <usize>::sse_encode(ptr, serializer);\n                <i32>::sse_encode(size, serializer);}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseEncode for RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<_Source>> {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_encode(self, serializer: &mut flutter_rust_bridge::for_generated::SseSerializer) {let (ptr, size) = self.sse_encode_raw();\n                <usize>::sse_encode(ptr, serializer);\n                <i32>::sse_encode(size, serializer);}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseEncode for String {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_encode(self, serializer: &mut flutter_rust_bridge::for_generated::SseSerializer) {<Vec<u8>>::sse_encode(self.into_bytes(), serializer);}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseEncode for crate::api::DeviceInfo {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_encode(self, serializer: &mut flutter_rust_bridge::for_generated::SseSerializer) {<String>::sse_encode(self.name, serializer);\n<crate::api::ProtocolType>::sse_encode(self.protocol, serializer);\n<Vec<crate::api::IpAddr>>::sse_encode(self.addresses, serializer);\n<u16>::sse_encode(self.port, serializer);}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseEncode for crate::api::ErrorMessage {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_encode(self, serializer: &mut flutter_rust_bridge::for_generated::SseSerializer) {match self {crate::api::ErrorMessage::Error(field0) => { <i32>::sse_encode(0, serializer); <String>::sse_encode(field0, serializer);\n }\n _ => { unimplemented!(\"\"); }}}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseEncode for f64 {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_encode(self, serializer: &mut flutter_rust_bridge::for_generated::SseSerializer) {serializer.cursor.write_f64::<NativeEndian>(self).unwrap();}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseEncode for i32 {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_encode(self, serializer: &mut flutter_rust_bridge::for_generated::SseSerializer) {serializer.cursor.write_i32::<NativeEndian>(self).unwrap();}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseEncode for crate::api::IpAddr {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_encode(self, serializer: &mut flutter_rust_bridge::for_generated::SseSerializer) {match self {crate::api::IpAddr::V4{o1,o2,o3,o4} => { <i32>::sse_encode(0, serializer); <u8>::sse_encode(o1, serializer);\n<u8>::sse_encode(o2, serializer);\n<u8>::sse_encode(o3, serializer);\n<u8>::sse_encode(o4, serializer);\n }\ncrate::api::IpAddr::V6{o1,o2,o3,o4,o5,o6,o7,o8,o9,o10,o11,o12,o13,o14,o15,o16,scope_id} => { <i32>::sse_encode(1, serializer); <u8>::sse_encode(o1, serializer);\n<u8>::sse_encode(o2, serializer);\n<u8>::sse_encode(o3, serializer);\n<u8>::sse_encode(o4, serializer);\n<u8>::sse_encode(o5, serializer);\n<u8>::sse_encode(o6, serializer);\n<u8>::sse_encode(o7, serializer);\n<u8>::sse_encode(o8, serializer);\n<u8>::sse_encode(o9, serializer);\n<u8>::sse_encode(o10, serializer);\n<u8>::sse_encode(o11, serializer);\n<u8>::sse_encode(o12, serializer);\n<u8>::sse_encode(o13, serializer);\n<u8>::sse_encode(o14, serializer);\n<u8>::sse_encode(o15, serializer);\n<u8>::sse_encode(o16, serializer);\n<u32>::sse_encode(scope_id, serializer);\n }\n _ => { unimplemented!(\"\"); }}}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseEncode for Vec<crate::api::IpAddr> {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_encode(self, serializer: &mut flutter_rust_bridge::for_generated::SseSerializer) {<i32>::sse_encode(self.len() as _, serializer);\n        for item in self { <crate::api::IpAddr>::sse_encode(item, serializer); }}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseEncode for Vec<u8> {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_encode(self, serializer: &mut flutter_rust_bridge::for_generated::SseSerializer) {<i32>::sse_encode(self.len() as _, serializer);\n        for item in self { <u8>::sse_encode(item, serializer); }}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseEncode for Option<crate::api::DeviceInfo> {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_encode(self, serializer: &mut flutter_rust_bridge::for_generated::SseSerializer) {<bool>::sse_encode(self.is_some(), serializer);\n                if let Some(value) = self {\n                    <crate::api::DeviceInfo>::sse_encode(value, serializer);\n                }}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseEncode for crate::api::ProtocolType {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_encode(self, serializer: &mut flutter_rust_bridge::for_generated::SseSerializer) {<i32>::sse_encode(match self {crate::api::ProtocolType::Chromecast => { 0 }\ncrate::api::ProtocolType::FCast => { 1 }\n _ => { unimplemented!(\"\"); }}, serializer);}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseEncode for u16 {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_encode(self, serializer: &mut flutter_rust_bridge::for_generated::SseSerializer) {serializer.cursor.write_u16::<NativeEndian>(self).unwrap();}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseEncode for u32 {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_encode(self, serializer: &mut flutter_rust_bridge::for_generated::SseSerializer) {serializer.cursor.write_u32::<NativeEndian>(self).unwrap();}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseEncode for u8 {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_encode(self, serializer: &mut flutter_rust_bridge::for_generated::SseSerializer) {serializer.cursor.write_u8(self).unwrap();}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseEncode for () {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_encode(self, serializer: &mut flutter_rust_bridge::for_generated::SseSerializer) {}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseEncode for usize {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_encode(self, serializer: &mut flutter_rust_bridge::for_generated::SseSerializer) {serializer.cursor.write_u64::<NativeEndian>(self as _).unwrap();}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "\n                impl SseEncode for bool {\n                    // Codec=Sse (Serialization based), see doc to use other codecs\n                    fn sse_encode(self, serializer: &mut flutter_rust_bridge::for_generated::SseSerializer) {serializer.cursor.write_u8(self as _).unwrap();}\n                }\n                ",
          "extern_funcs": [],
          "extern_classes": []
        }
      ],
      "io": [
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        }
      ],
      "web": [
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        },
        {
          "body": "",
          "extern_funcs": [],
          "extern_classes": []
        }
      ]
    }
  },
  "extern_struct_names": []
}